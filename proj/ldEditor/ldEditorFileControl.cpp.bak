#include"stdafx.h"
#include "ldEditor.h"

using namespace _ldEditor;

void ldEditor::newLD	(Windows::Forms::TableLayoutPanel^ parentTlp)
{
	array<rungControl^>^	tmpArray
		= gcnew	array<rungControl^>(parentTlp->Controls->Count);

	parentTlp->SuspendLayout();
	//----------------------------------------
	//	Create a new rung when this form loaded
	//----------------------------------------
	parentTlp->Controls->CopyTo(tmpArray,0);
	parentTlp->Controls->Clear();
	for each(rungControl^ e in tmpArray)	// call destructor iteratedlly
		e->~rungControl();

	parentTlp->Controls->Add(
		gcnew /*rung::*/rungControl(this->selectedInpItem,this->selectedOutItem,this->_errorHdl)
		,-1
		,-1);

	parentTlp->ResumeLayout();
}
int ldEditor::store	(CLST_METADATA		**lmdsContainer)
{
	//---------------------------
	//	storing info to meta data
	//		1. write in header info
	//		2. allocating memory
	//		3. soft-link to child rungs
	//		4. duplicate all data from soft-link one to real-one, whose data were allocated in local memory(this form)
	//			Done , Works Well , Hsien , 2012.09.27
	//---------------------------
	std::string		tmpString;
	CLST_METADATA	*tmpRmdsData = 0;
	size_t			dataIndex;		// last-write-in index

	//------------------------------
	//	release last lmds before store new lmds
	//------------------------------
	if(*lmdsContainer){
		cluster::finalize(*lmdsContainer);
		*lmdsContainer = NULL;
	}

	//*lmdsContainer = cluster::initialize(
	//	(CP_CONSTRUCTOR)cluster::duplicate
	//	,(DESTRUCTOR)cluster::finalize
	//	,this->tlpRung->Controls->Count);		// number of rungs
	*lmdsContainer = clstCreate(
		(DUPLICATOR)cluster::duplicate
		,(DESTRUCTOR)cluster::finalize
		,(FILEWRITER)cluster::fWrite
		,(FILEREADER)cluster::fRead
		,tlpRung->Controls->Count);				// updataed , Hsien, 2012.10.3

	//------------
	//	Head Info
	//------------
	tmpString.clear();
	if(device::writeIn((*lmdsContainer)->headData
		,this->tlpRung->Controls->Count				// item code
		,tmpString.c_str()
		,tmpString.length()+1/*Hsien , 2013.04.16*/) != META_SUCCESS){
			//------------------
			//	Write-in failure
			//------------------
			return 0;
	}						// data

	//-----------
	//	Rungs' Info
	//-----------
	dataIndex = -1;
	for each(rungControl^ e in this->tlpRung->Controls){
		if(!e->store(&tmpRmdsData)){
				//-----------------------------------
				//	Store Process Fail , do finalize
				//-----------------------------------
			if(tmpRmdsData != NULL)
				cluster::finalize(tmpRmdsData);
			return 0;
		}
		dataIndex++;
		cluster::writeIn(*lmdsContainer
			,dataIndex
			,cluster::duplicate(tmpRmdsData));
	}

	cluster::finalize(tmpRmdsData);
	return 1;
}

void ldEditor::rebuild	(const CLST_METADATA*	lmds)
{
	//------------------------------------------------------
	//	rebuild info from meta data
	//		1. adjest rungs ,according to indication of lmds
	//		3. data link , and do rebuilding operation
	//		4. then call child's rebuiding function
	//			Done , Works well , Hsien , 2012.09.27
	//------------------------------------------------------
	rungControl^	rungHandle;
	int	_rungCount;
	size_t dataIndex;

	device::readOut(lmds->headData,_rungCount);	// rebuilding according to header data

	//--------------------------
	//	rung adjesting mechanism
	//	performance would enhanced in expect.
	//	Hsien , 2012.09.30
	//--------------------------
	this->tlpRung->SuspendLayout();

	while(_rungCount != this->tlpRung->Controls->Count){
		if(this->tlpRung->Controls->Count < _rungCount){
			//--------------------------------------------------
			//	if current rungs is less than required , creating
			//---------------------------------------------------
			rungControl^ hdl = gcnew rungControl(this->selectedInpItem,this->selectedOutItem,this->_errorHdl);
			this->tlpRung->Controls->Add(hdl
				,-1
				,-1);		// added this->errorStack , Hsien , 2012.10.12
//			hdl->_ldResImages = this->_ldResImages;
		}
		else if(this->tlpRung->Controls->Count > _rungCount){
			//---------------------------------------------------
			//	if current rungs is greater than required , remove and destruct
			//---------------------------------------------------
			rungHandle = safe_cast<rungControl^>(this->tlpRung->Controls[this->tlpRung->Controls->Count-1]);
			this->tlpRung->Controls->RemoveAt(this->tlpRung->Controls->Count-1);
			rungHandle->~rungControl();
		}
	}

	//-------------
	//	Rebuilding Each Rung
	//-------------
	this->tspbLoadingLmds->Maximum = _rungCount;							// recovered by Hsien , 2013.01.25
	dataIndex = 0;
	for each(rungControl^ e in this->tlpRung->Controls){
		e->rebuild((CLST_METADATA*)cluster::readOut(lmds,dataIndex));
		dataIndex++;
		this->tspbLoadingLmds->PerformStep();								// recovered by Hsien , 2013.01.25
	}

	this->tlpRung->ResumeLayout();
}

//int ldEditor::lmdsFileSave(FILE*	outFp)
//{
//	//----------------------------------
//	//	Presumpation : store() had been excuted , so that , within a 
//	//----------------------------------
//	return 1;
//}
//
//int ldEditor::lmdsFileLoad(FILE*	inpFp)
//{
//	return 1;
//}
//
System::Void ldEditor::tsbNewClick(System::Object^  /*sender*/, System::EventArgs^  /*e*/) {
	this->newLD(this->tlpRung);
}
System::Void ldEditor::tsbSaveClick	(System::Object^  /*sender*/, System::EventArgs^  /*e*/) {
	std::string		fileName;					
	FILE*			destFile = NULL;
	CLST_METADATA	*lmds = NULL;

	this->saveFileDialog->FilterIndex = 1;
	this->saveFileDialog->FileName = nullptr;
	if(this->saveFileDialog->ShowDialog() == System::Windows::Forms::DialogResult::OK){
		this->Text = this->saveFileDialog->FileName;
		MarshalString(this->saveFileDialog->FileName,fileName);	// turns System String into standard string
		destFile = fopen(fileName.c_str(),"w");					// w+ , or w? , questioned by Hsien , 2013.01.14

		//-----------------
		//	call store function to store current status of LDE
		//-----------------
		if(!this->store(&lmds)){
			//-----------------
			//	Store Process Failure , DO NOT DO FURTHER FILE-IO PROCESS
			//-----------------
			this->tsslStatus->Text		= this->_ldResMessage->GetString("lmdsSaveError");
		}
		else{
			//-----------------
			//	write into FILE
			//-----------------
			cluster::fWrite(lmds,destFile);
			this->tsslStatus->Text		= this->_ldResMessage->GetString("lmdsSaveSuccess");	// Hsien , 2013.04.15
		}
		//-----------------
		//	release resource 
		//-----------------
		cluster::finalize(lmds);
		fclose(destFile);
	}//if
 }
System::Void ldEditor::tsbLoadClick	(System::Object^  /*sender*/, System::EventArgs^  /*e*/) {
	std::string		fileName;					
	FILE*			sourceFile = NULL;
	CLST_METADATA	*lmds = NULL;
			 
	this->openFileDialog->FilterIndex = 1;
	this->openFileDialog->FileName = nullptr;
	
	if(this->openFileDialog->ShowDialog() == System::Windows::Forms::DialogResult::OK){
		this->Text = this->openFileDialog->FileName;
		MarshalString(this->openFileDialog->FileName,fileName);	// turns System String into standard string
		sourceFile = fopen(fileName.c_str(),"r");

		this->tsslStatus->Text = this->_ldResMessage->GetString("lmdsLoading");
		//-----------------
		//	read from FILE
		//-----------------
		cluster::fRead(&lmds,sourceFile);
		//-----------------
		//	call store function to store current status of LDE
		//-----------------
		this->rebuild(lmds);
		//-----------------
		//	release resource 
		//-----------------
 		cluster::finalize(lmds);
		fclose(sourceFile);

		this->tsslStatus->Text = this->_ldResMessage->GetString("lmdsLoaded");
	}//if
}
